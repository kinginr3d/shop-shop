{"ast":null,"code":"import { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"./actions\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","categories","currentCategory","useProductReducer","initialState"],"sources":["C:/Users/jakee/Documents/shop-shop/client/src/utils/reducers.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY\r\n  } from \"./actions\";\r\n  \r\n  export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n      case UPDATE_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          products: [...action.products],\r\n        };\r\n      case UPDATE_CATEGORIES:\r\n        return {\r\n            ...state,\r\n            categories: [...action.categories],\r\n        };\r\n      case UPDATE_CURRENT_CATEGORY:\r\n        return {\r\n            ...state,\r\n            currentCategory: action.currentCategory,\r\n        };\r\n  \r\n      // if it's none of these actions, do not update state at all and keep things the same!\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export function useProductReducer(initialState) {\r\n    return useReducer(reducer, initialState);\r\n  }"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SACIC,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,QAClB,WAAW;AAElB,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA,KAAKN,eAAe;MAClB,OAAO;QACL,GAAGI,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAQ;MAC/B,CAAC;IACH,KAAKN,iBAAiB;MACpB,OAAO;QACH,GAAGG,KAAK;QACRI,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAU;MACrC,CAAC;IACH,KAAKN,uBAAuB;MAC1B,OAAO;QACH,GAAGE,KAAK;QACRK,eAAe,EAAEJ,MAAM,CAACI;MAC5B,CAAC;;IAEH;IACA;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,OAAO,SAASM,iBAAiBA,CAACC,YAAY,EAAE;EAC9C,OAAOZ,UAAU,CAACI,OAAO,EAAEQ,YAAY,CAAC;AAC1C"},"metadata":{},"sourceType":"module"}