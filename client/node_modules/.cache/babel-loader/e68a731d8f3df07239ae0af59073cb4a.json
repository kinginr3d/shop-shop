{"ast":null,"code":"import { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, ADD_TO_CART, ADD_MULTIPLE_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY, CLEAR_CART, TOGGLE_CART } from '../utils/actions';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products]\n      };\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        })\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","_id","length","map","purchaseQuantity","useProductReducer","initialState"],"sources":["C:/Users/jakee/Documents/shop-shop/client/src/utils/reducers.js"],"sourcesContent":["import { useReducer } from 'react';\n\nimport {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from '../utils/actions';\n  \n  export const reducer = (state, action) => {\n    switch (action.type) {\n      // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n      case UPDATE_PRODUCTS:\n        return {\n          ...state,\n          products: [...action.products],\n        };\n      case UPDATE_CATEGORIES:\n        return {\n            ...state,\n            categories: [...action.categories],\n        };\n      case UPDATE_CURRENT_CATEGORY:\n        return {\n            ...state,\n            currentCategory: action.currentCategory,\n        };\n      case ADD_TO_CART:\n        return {\n          ...state,\n          cartOpen: true,\n          cart: [...state.cart, action.product]\n        };\n      case ADD_MULTIPLE_TO_CART:\n        return {\n          ...state,\n          cart: [...state.cart, ...action.products],\n        };\n      case REMOVE_FROM_CART:\n        let newState = state.cart.filter(product => {\n          return product._id !== action._id;\n        });\n\n        return {\n          ...state,\n          cartOpen: newState.length > 0,\n          cart: newState\n        };\n      case UPDATE_CART_QUANTITY:\n        return {\n          ...state,\n          cartOpen: true,\n          cart: state.cart.map(product => {\n            if (action._id === product._id) {\n              product.purchaseQuantity = action.purchaseQuantity;\n            }\n            return product;\n          })\n        };\n      case CLEAR_CART:\n        return {\n          ...state,\n          cartOpen: false,\n          cart: []\n        };\n      case TOGGLE_CART:\n        return {\n          ...state,\n          cartOpen: !state.cartOpen\n        };\n  \n      // if it's none of these actions, do not update state at all and keep things the same!\n      default:\n        return state;\n    }\n  };\n\n  export function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n  }"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SACEC,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,WAAW,EACXC,oBAAoB,EACpBC,gBAAgB,EAChBC,oBAAoB,EACpBC,UAAU,EACVC,WAAW,QACN,kBAAkB;AAEvB,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA,KAAKZ,eAAe;MAClB,OAAO;QACL,GAAGU,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAQ;MAC/B,CAAC;IACH,KAAKZ,iBAAiB;MACpB,OAAO;QACH,GAAGS,KAAK;QACRI,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAU;MACrC,CAAC;IACH,KAAKZ,uBAAuB;MAC1B,OAAO;QACH,GAAGQ,KAAK;QACRK,eAAe,EAAEJ,MAAM,CAACI;MAC5B,CAAC;IACH,KAAKZ,WAAW;MACd,OAAO;QACL,GAAGO,KAAK;QACRM,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAI,EAAEN,MAAM,CAACO,OAAO;MACtC,CAAC;IACH,KAAKd,oBAAoB;MACvB,OAAO;QACL,GAAGM,KAAK;QACRO,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAI,EAAE,GAAGN,MAAM,CAACE,QAAQ;MAC1C,CAAC;IACH,KAAKR,gBAAgB;MACnB,IAAIc,QAAQ,GAAGT,KAAK,CAACO,IAAI,CAACG,MAAM,CAACF,OAAO,IAAI;QAC1C,OAAOA,OAAO,CAACG,GAAG,KAAKV,MAAM,CAACU,GAAG;MACnC,CAAC,CAAC;MAEF,OAAO;QACL,GAAGX,KAAK;QACRM,QAAQ,EAAEG,QAAQ,CAACG,MAAM,GAAG,CAAC;QAC7BL,IAAI,EAAEE;MACR,CAAC;IACH,KAAKb,oBAAoB;MACvB,OAAO;QACL,GAAGI,KAAK;QACRM,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAEP,KAAK,CAACO,IAAI,CAACM,GAAG,CAACL,OAAO,IAAI;UAC9B,IAAIP,MAAM,CAACU,GAAG,KAAKH,OAAO,CAACG,GAAG,EAAE;YAC9BH,OAAO,CAACM,gBAAgB,GAAGb,MAAM,CAACa,gBAAgB;UACpD;UACA,OAAON,OAAO;QAChB,CAAC;MACH,CAAC;IACH,KAAKX,UAAU;MACb,OAAO;QACL,GAAGG,KAAK;QACRM,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE;MACR,CAAC;IACH,KAAKT,WAAW;MACd,OAAO;QACL,GAAGE,KAAK;QACRM,QAAQ,EAAE,CAACN,KAAK,CAACM;MACnB,CAAC;;IAEH;IACA;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,OAAO,SAASe,iBAAiBA,CAACC,YAAY,EAAE;EAC9C,OAAO3B,UAAU,CAACU,OAAO,EAAEiB,YAAY,CAAC;AAC1C"},"metadata":{},"sourceType":"module"}