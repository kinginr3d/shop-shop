{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakee\\\\Documents\\\\shop-shop\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { idbPromise } from '../../utils/helpers';\nfunction CategoryMenu({\n  setCategory\n}) {\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\nexport default CategoryMenu;","map":{"version":3,"names":["React","useEffect","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useQuery","QUERY_CATEGORIES","useStoreContext","idbPromise","CategoryMenu","setCategory","state","dispatch","categories","loading","data","categoryData","handleClick","id","type","currentCategory","forEach","category","then","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","key","_id","onClick","name"],"sources":["C:/Users/jakee/Documents/shop-shop/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu({ setCategory }) {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,iBAAiB,EAAEC,uBAAuB,QAAQ,qBAAqB;AAChF,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,SAASC,YAAYA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,eAAe,CAAC,CAAC;EAC3C,MAAM;IAAEM;EAAW,CAAC,GAAGF,KAAK;EAC5B,MAAM;IAAEG,OAAO;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGX,QAAQ,CAACC,gBAAgB,CAAC;EAClE,MAAMW,WAAW,GAAGC,EAAE,IAAI;IACxBN,QAAQ,CAAC;MACPO,IAAI,EAAEf,uBAAuB;MAC7BgB,eAAe,EAAEF;IACnB,CAAC,CAAC;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIc,YAAY,EAAE;MAChBJ,QAAQ,CAAC;QACPO,IAAI,EAAEhB,iBAAiB;QACvBU,UAAU,EAAEG,YAAY,CAACH;MAC3B,CAAC,CAAC;MACFG,YAAY,CAACH,UAAU,CAACQ,OAAO,CAACC,QAAQ,IAAI;QAC1Cd,UAAU,CAAC,YAAY,EAAE,KAAK,EAAEc,QAAQ,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACR,OAAO,EAAE;MACnBN,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAACe,IAAI,CAACV,UAAU,IAAI;QACjDD,QAAQ,CAAC;UACPO,IAAI,EAAEhB,iBAAiB;UACvBU,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACG,YAAY,EAAEF,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAGrC,oBACEX,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE7B,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oBAAsB,CAAC,EAC1BjB,UAAU,CAACkB,GAAG,CAACC,IAAI,iBAClB/B,KAAA,CAAAuB,aAAA;IACES,GAAG,EAAED,IAAI,CAACE,GAAI;IACdC,OAAO,EAAEA,CAAA,KAAM;MACblB,WAAW,CAACe,IAAI,CAACE,GAAG,CAAC;IACvB,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDE,IAAI,CAACI,IACA,CACT,CACE,CAAC;AAEV;AAEA,eAAe3B,YAAY"},"metadata":{},"sourceType":"module"}